#/etc/nginx/nginx.conf
user  nginx; # Default: nobody

# Set number of worker proccesses automatically based on number of cores
worker_processes  auto; # Default: 1

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit  on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Determines whether nginx should become a daemon. Mainly used during development.
daemon  off;

# Defines a file that will store the process ID of the main process.
pid /run/nginx/nginx.pid;

# nginx uses the locking mechanism to implement accept_mutex and serialize access to shared memory. 
# On most systems the locks are implemented using atomic operations, and this directive is ignored. 
# On other systems the “lock file” mechanism is used. This directive specifies a prefix for the names of lock files.
lock_file /run/nginx/nginx.lock;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {

    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections  1024; # Default: 1024
}

http {
    include   mime.types;
    include   /etc/nginx/conf.d/*.conf; # Includes virtual hosts configs.  
    index     index.html index.htm index.php;

    default_type  application/octet-stream;

    log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile  on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames.
    #tcp_nopush on;

    # tell nginx version to clients.
    server_tokens on;

    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 30;

    #gzip  on;

    # HTTPS server
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
